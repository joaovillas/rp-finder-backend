// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String?             @unique @default(uuid())
  email            String              @unique
  name             String
  birth            DateTime
  phone            String?
  password         String
  createdAt        DateTime            @default(now())
  permissions      UserHasPermission[]
  ServerAvaliation ServerAvaliation[]
}

model Server {
  id               String             @unique @default(uuid())
  name             String
  discord_channel  String?
  fivem_id         String             @unique
  contact          String?
  tags             ServerTags[]
  description      String?
  logo             String?
  createdAt        DateTime           @default(now())
  ServerAvaliation ServerAvaliation[]
  ServerPlayers    ServerPlayers[]
}

model ServerPlayers {
  id           String   @unique @default(uuid())
  totalPlayers Int      @default(0)
  Server       Server?  @relation(fields: [serverId], references: [id])
  serverId     String?
  createdAt    DateTime @default(now())
}

model ServerTags {
  id        String   @unique @default(uuid())
  name      String
  Server    Server?  @relation(fields: [serverId], references: [id])
  serverId  String?
  createdAt DateTime @default(now())
}

model Permission {
  id         String              @unique @default(uuid())
  name       String
  createdAt  DateTime            @default(now())
  permission UserHasPermission[]
}

model UserHasPermission {
  id           String      @unique @default(uuid())
  user         User?       @relation(fields: [userId], references: [id])
  userId       String?
  permission   Permission? @relation(fields: [permissionId], references: [id])
  permissionId String?
  createdAt    DateTime    @default(now())
}

model ServerAvaliation {
  id         String   @unique @default(uuid())
  server     Server?  @relation(fields: [serverId], references: [id])
  serverId   String?
  user       User?    @relation(fields: [userId], references: [id])
  userId     String?
  avaliation Float
  createdAt  DateTime @default(now())
}
